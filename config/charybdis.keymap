#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
    quick-tap-ms = <200>;
    retro-tap;
};

/ {
    tb0_mmv_ibl {
        compatible = "zmk,input-behavior-listener";
        device = <&trackball>;
        layers = <0 1 5>;

        /* NOTE: only apply input-code overriding for INPUT_EV_REL */

        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;

        /* bind a behavior to auto activate MSK layer for &mkp */

        bindings = <&ib_tog_layer 1>;

        /* align to CCW 45 degree */
        // rotate-deg = <315>;
        /* NOTE 1: This settings do not compitable with y-invert and x-invert */
        /* NOTE 2: Floating point computation requires alot of ram. */
        /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */
    };

    /* input config for mouse scroll mode on momentary mouse scoll layer (MSC) */

    tb0_msl_ibl {
        compatible = "zmk,input-behavior-listener";
        device = <&trackball>;
        layers = <2>;
        evt-type = <INPUT_EV_REL>;

        /* slienting x-axis with alt event code */

        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;

        /* invent scrolling direction */

        y-invert;

        /* align to CCW 45 degree */
        // rotate-deg = <315>;
        /* NOTE 1: This settings do not compitable with y-invert and x-invert */
        /* NOTE 2: Floating point computation requires alot of ram. */
        /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */
        /* bind a behavior to down scaling input value to (1/8) */
        /* NOTE: This behavior is different to scale-divisor. */
        /*       The delta value is accumlated until result >= 1 after cast. */
        /*       The scrolling is preented in hi-res and allow precise scrolling */

        bindings = <&ib_wheel_scaler 1 64>;
    };

    /* adjust cooldown waiting period for mouse key layer (MSK) after activated */

    ib_tog_layer: ib_tog_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <1500>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 15>;
            layers = <0>;
        };

        bracket_r {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <21 20>;
            layers = <0>;
        };

        lb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 28>;
            layers = <0>;
        };

        rb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
            layers = <0>;
        };

        lf {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 26>;
            layers = <0>;
        };

        rba {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 33>;
            layers = <0>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <16 17>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <19 18>;
            layers = <0>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <30 31>;
            layers = <0>;
        };

        multiplu {
            bindings = <&kp KP_ASTERISK>;
            key-positions = <9 10>;
            layers = <0>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <7 8>;
            layers = <0>;
        };

        tick {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp TILDE>;
            key-positions = <3 4>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 29>;
            layers = <0>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <6 7>;
            layers = <0>;
        };

        exam {
            bindings = <&kp EXCL>;
            key-positions = <1 2>;
            layers = <0>;
        };

        backspace {
            bindings = <&mt DELETE BACKSPACE>;
            key-positions = <14 15>;
            layers = <0>;
        };

        delete {
            bindings = <&mkp LCLK>;
            key-positions = <26 27>;
            layers = <0>;
        };

        rclk {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
            layers = <1>;
        };

        switch {
            bindings = <&mo 8>;
            key-positions = <39 40>;
        };

        reverse {
            bindings = <&sl 10>;
            key-positions = <37 38>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <5 6>;
        };
    };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homewrow_mods_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 9 8 10 11 23 22 35 34 33 21 20 19 18 30 31 32 41 40 39>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-on-release;
        };

        tap_preferred: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <40>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak-dh {
            bindings = <
&kp TAB           &kp Q            &kp W            &kp F         &kp P              &kp B           &kp J        &kp L                 &kp U                 &kp Y             &kp SEMI     &kp BACKSLASH
&mt RCTRL ESCAPE  &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G           &kp M        &hmr RIGHT_SHIFT N    &hmr RIGHT_CONTROL E  &hmr RIGHT_ALT I  &hmr RGUI O  &kp APOS
&kp LSHFT         &kp Z            &kp X            &kp C         &kp D              &kp V           &kp K        &kp H                 &kp COMMA             &kp DOT           &kp FSLH     &sl 9
                                                    &kp LEFT_WIN  &lt 6 SPACE        &lt 10 ENTER    &lt 7 ENTER  &mt DELETE BACKSPACE
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans    &trans    &trans     &trans    &trans  &trans     &trans    &trans     &trans  &trans
&trans  &trans  &trans    &trans    &trans     &trans    &trans  &trans     &mo 2     &trans     &trans  &trans
&trans  &none   &mkp MB1  &mkp MB3  &mkp RCLK  &trans    &trans  &mkp LCLK  &mkp MB3  &mkp RCLK  &mo 3   &trans
                          &trans    &trans     &trans    &trans  &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;

            label = "scroll";
        };

        colemak-dh_without_hrm {
            bindings = <
&kp TAB  &kp Q  &kp W  &kp F   &kp P   &kp B     &kp J   &kp L   &kp U      &kp Y    &kp SEMI  &kp BSPC
&trans   &kp A  &kp R  &kp S   &kp T   &kp G     &kp M   &kp N   &kp E      &kp I    &kp O     &kp APOS
&trans   &kp Z  &kp X  &kp C   &kp D   &kp V     &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH  &trans
                       &trans  &trans  &trans    &trans  &trans
            >;
        };

        bf5 {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R      &kp T    &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&mt RCTRL ESCAPE  &kp A  &kp S  &kp D     &kp F      &kp G    &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&kp LSHFT         &kp Z  &kp X  &kp C     &kp V      &kp B    &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                                &kp LALT  &kp SPACE  &mo 6    &trans  &trans
            >;
        };

        war_thuner {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E    &kp R      &kp T    &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&kp LCTRL  &kp A  &kp S  &kp D    &kp F      &kp G    &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&kp LSHFT  &kp Z  &kp X  &kp C    &kp V      &kp B    &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                         &kp DOT  &kp SPACE  &mo 6    &trans  &trans
            >;
        };

        number {
            bindings = <
&trans  &kp KP_MULTIPLY  &kp N7  &kp N8  &kp N9  &kp PLUS     &none   &none      &none      &none     &none     &none
&trans  &kp KP_DIVIDE    &kp N4  &kp N5  &kp N6  &kp MINUS    &none   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&none   &kp DOT          &kp N1  &kp N2  &kp N3  &kp N0       &none   &none      &none      &none     &none     &trans
                                 &trans  &none   &trans       &trans  &trans
            >;

            label = "num";
        };

        fun {
            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &none  &none      &none      &none     &none     &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK     &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &none  &none      &none      &none     &none     &none
                        &none   &none   &mo 9              &none  &trans
            >;
        };

        switch {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans       &trans  &trans
&trans      &trans        &bootloader   &to 5         &trans        &trans          &trans  &trans  &trans  &bootloader  &trans  &trans
&trans      &trans        &to 0         &to 3         &to 4         &trans          &trans  &trans  &trans  &trans       &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans
            >;

            label = "switch";
        };

        reverse {
            bindings = <
&trans  &kp SEMI  &kp Y    &kp U      &kp L   &kp J     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp O     &kp I    &kp E      &kp N   &kp M     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp FSLH  &kp DOT  &kp COMMA  &kp H   &kp K     &trans  &trans  &trans  &trans  &trans  &trans
                           &trans     &trans  &trans    &trans  &trans
            >;
        };

        sym {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp AMPS    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACKET        &trans    &trans    &trans        &trans     &trans  &trans
&trans  &kp COLON         &kp DOLLAR  &kp PERCENT   &kp CARET             &kp PLUS                 &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &kp TILDE         &kp EXCL    &kp AT        &kp DOLLAR            &kp RIGHT_PARENTHESIS    &trans    &trans    &trans        &trans     &trans  &trans
                                      &trans        &trans                &trans                   &trans    &trans
            >;
        };
    };
};
