
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>



/ {
    combos {
        compatible = "zmk,combos";

        bracket {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        bracket_r {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <21 20>;
        };

        lb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
        };

        lf {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 32>;
        };

        rba {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 33>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <16 17>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <19 18>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <7 8>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <30 31>;
        };

        multiplu {
            bindings = <&kp KP_ASTERISK>;
            key-positions = <9 10>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <21 22>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <9 8>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 3>;
        };

        tick {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <37 38>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 4>;
        };

        dollar {
            bindings = <&kp TILDE>;
            key-positions = <4 5>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 29>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <6 7>;
        };

        tilde {
            bindings = <&kp DOLLAR>;
            key-positions = <15 16>;
        };

        exam {
            bindings = <&kp EXCL>;
            key-positions = <1 2>;
        };
    };

    macros {
        love: love {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp X &kp I &kp A &kp O &kp SPACE &kp Y &kp A &kp N &kp G &kp COMMA &kp SPACE &kp LS(I) &kp SPACE &kp L &kp O &kp V &kp E &kp SPACE &kp Y &kp O &kp U &kp COMMA &kp SPACE &kp F &kp O &kp R &kp SPACE &kp E &kp V &kp E &kp R &kp Y &kp SPACE &kp T &kp H &kp I &kp N &kp G &kp SPACE &kp W &kp E &kp SPACE &kp H &kp A &kp V &kp E &kp SPACE &kp B &kp E &kp E &kp N &kp SPACE &kp T &kp H &kp R &kp O &kp U &kp G &kp H &kp COMMA &kp SPACE &kp LS(I) &kp SPACE &kp A &kp M &kp SPACE &kp R &kp O &kp O &kp T &kp I &kp N &kp G &kp SPACE &kp F &kp O &kp R &kp SPACE &kp Y &kp O &kp U>;
            label = "LOVE";
        };
    };

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homewrow_mods_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 9 8 10 11 23 22 35 34 33 21 20 19 18 30 31 32 41 40 39>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak-dh {
            bindings = <
&kp TAB           &kp Q            &kp W            &kp F         &kp P              &kp B        &kp J        &kp L               &kp U                 &kp Y             &kp SEMI     &kp BACKSLASH
&mt RCTRL ESCAPE  &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G        &kp M        &hmr RIGHT_SHIFT N  &hmr RIGHT_CONTROL E  &hmr RIGHT_ALT I  &hmr RGUI O  &kp APOS
&kp LSHFT         &kp Z            &kp X            &kp C         &kp D              &kp V        &kp K        &kp H               &kp COMMA             &kp DOT           &kp FSLH     &sl 8
                                                    &kp LCMD      &lt 4 DELETE       &kp SPACE    &lt 5 ENTER  &lt 6 BACKSPACE     &lt 5 DELETE
            >;
        };

        colemak-dh_without_hrm {
            bindings = <
&kp TAB  &kp Q  &kp W  &kp F   &kp P   &kp B     &kp J   &kp L   &kp U      &kp Y    &kp SEMI  &kp BSPC
&trans   &kp A  &kp R  &kp S   &kp T   &kp G     &kp M   &kp N   &kp E      &kp I    &kp O     &kp APOS
&trans   &kp Z  &kp X  &kp C   &kp D   &kp V     &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH  &trans
                       &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        qwerty {
            bindings = <
&kp TAB  &kp Q  &kp W  &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans   &kp A  &kp S  &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&trans   &kp Z  &kp X  &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &trans    &trans
                       &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        game {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R   &kp T        &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&mt RCTRL ESCAPE  &kp A  &kp S  &kp D     &kp F   &kp G        &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&kp LSHFT         &kp Z  &kp X  &kp C     &kp V   &kp B        &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                                &kp LALT  &kp N1  &kp SPACE    &trans  &trans  &trans
            >;
        };

        number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none  &none  &none  &none  &none     &kp PLUS   &kp N7  &kp N8  &kp N9  &kp KP_MULTIPLY  &kp BSPC
&trans  &none  &none  &none  &none  &none     &kp MINUS  &kp N4  &kp N5  &kp N6  &kp FSLH         &trans
&none   &none  &none  &none  &none  &none     &kp DOT    &kp N1  &kp N2  &kp N3  &kp N0           &trans
                      &none  &none  &trans    &kp RET    &trans  &trans
            >;
        };

        fun {
            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &none  &none      &none      &none     &none     &none
&none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK     &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &none  &none      &none      &none     &none     &none
                        &none   &none   &none              &none  &trans     &none
            >;
        };

        mouse {
            bindings = <
&none  &none  &kp C_VOL_DN  &kp C_VOLUME_UP  &none     &none        &kp K_REDO      &kp K_PASTE  &kp K_COPY    &kp K_CUT  &kp K_UNDO  &none
&none  &none  &none         &none            &none     &none        &kp LEFT_ARROW  &kp DOWN     &kp UP_ARROW  &kp RIGHT  &none       &none
&none  &none  &none         &none            &none     &none        &none           &none        &none         &none      &none       &none
                            &mkp MB4         &mkp MB5  &mkp LCLK    &mkp RCLK       &none
            >;
        };

        switch {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &to 3         &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &to 0         &to 1         &to 2         &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "switch";
        };

    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        switch {
            if-layers = <5 4>;
            then-layer = <7>;
        };
    };
};
