#define ZMK_MOUSE_DEFAULT_SCRL_VAL 140

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>


#define XXX &none
#define ___ &trans

#define COMBO_TIMEOUT 100

#define DEF 0
#define WIN 1
#define IOS 2
#define NAV 3
#define FN 4
#define LOCK 5  // 添加LOCK层
#define SYS 6


// 设置图层切换风格, 默认是轻触优先, 我这里改成按住优先就可以
&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <125>;  // 也就差说如果我在按下A键125ms内按下这个键, 轻触行为会生效
};

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
};


/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <3 4>;
            then-layer = <6>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        // 添加锁定层的组合键
        // combo_lock_layer {
        //     timeout-ms = <50>;
        //     key-positions = <1 2 3>;  // 右上角三个键的组合
        //     bindings = <&tog LOCK>;     // 切换LOCK层
        // };

         combo_lock_layer_new {
             timeout-ms = <50>;
             key-positions = <16 17 18>;  // 三个键的组合, 第一排开始, 左右都算在内
             bindings = <&tog LOCK>;     // 切换LOCK层
             require-prior-idle-ms = <1000>;  // 添加这个配置，要求在按combo之前有200ms的空闲时间
         };
    };
};


/ {
    behaviors {

    mk_tap: mk_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

    mt_hold: mt_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

    lgui_hold: lgui_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            // quick-tap-ms = <200>; // 如果在200毫秒内再次按下这个键, 则直接出发两次这个键
            // retro-tap;  // 如果按了之后没有按其他键, 直接松开了, 则触发短按功能 
            hold-while-undecided;  // 如果按住之后, 立刻按其他键了, 则直接触发长按功能
            // hold-while-undecided-linger;
            bindings = <&kp>, <&kp>;
        };
        
    layer_tap: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>; // 如果在200毫秒内再次按下删除键, 则直接触发删除键
            // require-prior-idle-ms = <125>;   // 如果在按下之后的125ms内按下了其他的非修饰键, 例如f键, 则直接触发删除键功能
            retro-tap;  // 如果按了之后没有按其他键, 直接松开了, 则触发删除键功能
            //  hold-while-undecided;  // 按下后立即触发换层功能, 除非什么也不按直接松开, 否则都是按住功能
            bindings = <&mo>, <&kp>;
        };


        layer_hold: layer_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>; // 如果在200毫秒内再次按下删除键, 则直接触发删除键
            require-prior-idle-ms = <125>;   // 如果在按下之前的125ms内按下了其他的非修饰键, 例如f键, 则直接触发删除键功能
            // retro-tap;  // 如果按了之后没有按其他键, 直接松开了, 则触发删除键功能
            hold-while-undecided;  // 按下后立即触发换层功能, 除非什么也不按直接松开, 否则都是按住功能
            bindings = <&mo>, <&kp>;
        };

        

        go_up: go_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp I>, <&kp UP_ARROW>;
            mods = <(MOD_LGUI)>;
        };

        go_down: go_down {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp DOWN_ARROW>;
            mods = <(MOD_LGUI)>;
        };

        go_right: go_right {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp RIGHT_ARROW>;
            mods = <(MOD_LGUI)>;
        };

        go_left: go_left {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp LEFT_ARROW>;
            mods = <(MOD_LGUI)>;
        };

        go_page_up: go_page_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp PAGE_UP>;
            mods = <(MOD_LGUI)>;
        };

        go_page_down: go_page_down {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp PAGE_DOWN>;
            mods = <(MOD_LGUI)>;
        };

        // win方向快捷键设置
        win_up: win_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp I>, <&kp UP_ARROW>;
            mods = <(MOD_LCTL)>;
        };

        win_down: win_down {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp DOWN_ARROW>;
            mods = <(MOD_LCTL)>;
        };

        win_right: win_right {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp RIGHT_ARROW>;
            mods = <(MOD_LCTL)>;
        };

        win_left: win_left {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp LEFT_ARROW>;
            mods = <(MOD_LCTL)>;
        };

        win_page_up: win_page_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp PAGE_UP>;
            mods = <(MOD_LCTL)>;
        };

        win_page_down: win_page_down {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp PAGE_DOWN>;
            mods = <(MOD_LCTL)>;
        };
    };
};


/ {
    behaviors {
        command_4: command_4 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_4>, <&kp LG(LEFT_ARROW)>;
            mods = <(MOD_LGUI)>;
        };

        command_8: command_8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_8>, <&kp LG(UP_ARROW)>;
            mods = <(MOD_LGUI)>;
        };

        command_5: command_5 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_5>, <&kp LG(DOWN_ARROW)>;
            mods = <(MOD_LGUI)>;
        };

        command_6: command_6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_6>, <&kp LG(RIGHT_ARROW)>;
            mods = <(MOD_LGUI)>;
        };
        


    };
};


/ {
    macros {

        tab_page_two: tab_page_two {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_wait_time 100>
                , <&macro_tap &kp TAB>
                , <&macro_wait_time 100>
                , <&macro_tap &kp TAB>
                , <&macro_wait_time 100>
                , <&macro_release &kp LGUI>
                ;
        };

        go_macbook: go_macbook {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&bt BT_SEL 0>
                , <&tog DEF>
                ;
        };

        go_macpro: go_macpro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&bt BT_SEL 1>
                , <&tog DEF>
                ;
        };

        go_win: go_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&bt BT_SEL 2>
                , <&tog WIN>
                ;
        };

        go_ipad: go_ipad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&bt BT_SEL 3>
                , <&tog IOS>
                ;
        };

       go_vision: go_vision {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&bt BT_SEL 4>
                , <&tog IOS>
                ;
        };

        go_lock: go_lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&bt BT_SEL 4>
                , <&tog LOCK>
                ;
        };

    };
};


// 下面是Notion快捷键

/ {
    behaviors {

        notion_h1: notion_h1 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp LG(LA(NUMBER_1))>;
            mods = <(MOD_LALT)>;
        };

        notion_h2: notion_h2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp LG(LA(NUMBER_2))>;
            mods = <(MOD_LALT)>;
        };

        notion_h3: notion_h3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp LG(LA(NUMBER_3))>;
            mods = <(MOD_LALT)>;
        };

        notion_h0: notion_h0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp LG(LA(NUMBER_0))>;
            mods = <(MOD_LALT)>;
        };
    };
};


/ {
    behaviors {
        LGUI_tab: LGUI_tab {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp LGUI>, <&kp LS(TAB)>;
                mods = <(MOD_LSFT)>;
        };

        LCTL_tab: LCTL_tab {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp LCTL>, <&kp LS(TAB)>;
                mods = <(MOD_LSFT)>;
        };

        G_SEMICOLON: G_SEMICOLON {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp G>, <&kp SEMICOLON>;
            mods = <(MOD_RGUI)>;
        };


        R_LBRC: R_LBRC {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp R>, <&kp LBRC>;
            mods = <(MOD_RGUI)>;
        };

        T_RBRC: T_RBRC {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp RBRC>;
            mods = <(MOD_RGUI)>;
        };

        F_LPAR: F_LPAR {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp LPAR>;
            mods = <(MOD_RGUI)>;
        };

        G_RPAR: G_RPAR {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp G>, <&kp RPAR>;
            mods = <(MOD_RGUI)>;
        };

        V_LBKT: V_LBKT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp LBKT>;
            mods = <(MOD_RGUI)>;
        };

        B_RBKT: B_RBKT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp B>, <&kp RBKT>;
            mods = <(MOD_RGUI)>;
        };

        // 下面是Wins下面的括号快捷键

        R_LBRC_WIN: R_LBRC_WIN {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp R>, <&kp LBRC>;
            mods = <(MOD_RCTL)>;
        };

        T_RBRC_WIN: T_RBRC_WIN {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp RBRC>;
            mods = <(MOD_RCTL)>;
        };

        F_LPAR_WIN: F_LPAR_WIN {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp LPAR>;
            mods = <(MOD_RCTL)>;
        };

        G_RPAR_WIN: G_RPAR_WIN {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp G>, <&kp RPAR>;
            mods = <(MOD_RCTL)>;
        };

        V_LBKT_WIN: V_LBKT_WIN {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp LBKT>;
            mods = <(MOD_RCTL)>;
        };

        B_RBKT_WIN: B_RBKT_WIN {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp B>, <&kp RBKT>;
            mods = <(MOD_RCTL)>;
        };

        LOCK_TOG: LOCK_TOG {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <XXX>, <&tog LOCK>;
            mods = <(MOD_LGUI)>;
        };

        tonav: tonav {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <XXX>, <&tog NAV>;
            mods = <(MOD_LALT)>;
        };

        dance_tilde: dance_tilde {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <XXX>, <&kp TILDE>;
        };
    };
};


/ {
    behaviors {

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp N2>, <&kp N3>;
        };

        dance_LBRC: dance_LBRC {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp RS(LBKT)>, <&kp RS(RBKT)>;
        };

        dance_LPAR: dance_LPAR {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp RS(N9)>, <&kp RS(N0)>;
        };

        dance_LBKT: dance_LBKT {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        dance_COLON: dance_COLON {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp RS(SEMICOLON)>, <&kp SEMICOLON>;
        };

        dance_PIPE: dance_PIPE {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp RS(BACKSLASH)>, <&kp BACKSLASH>;
        };

        dance_GRAVE: dance_GRAVE {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                DEF_layer {
                        bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬───────────┬───────────╮               ╭──────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
  &kp GRAVE   &kp Q        &kp W            &kp E       &R_LBRC       &T_RBRC        XXX                     &kp PAGE_UP     &go_page_up      &kp U          &go_up      &kp O     &layer_tap FN P  &layer_hold FN DELETE
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼───────────┬───────────┤              ├─────────────┬──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &kp RSHIFT  &kp A         &kp S          &kp D        &F_LPAR        &G_RPAR     XXX                     &tog NAV    &go_page_down   &go_left      &go_down     &go_right   &kp NUMBER_2    &kp NUMBER_3
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼───────────┼───────────┤               ├─────────────┬──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &mt LCTL TAB &kp Z        &kp X         &kp C         &V_LBKT        &B_RBKT    &LOCK_TOG                 &kp PAGE_DOWN    &kp N         &kp M      &kp COMMA      &kp DOT      &kp SLASH   &mt_hold RGUI TAB
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼───────────┼───────────┤             ├────────────┬───────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                        &kp LALT     &lgui_hold LGUI LALT  &kp SPC                           &kp ENTER   &layer_hold NAV BACKSPACE  &layer_hold FN ESC
//                                     ╰────────────┼──────────────┴─────────────╯                         ╰─────────────┴─────────────┼─────────────╯
                        >;
                label = "def";
                };


WIN_layer {

                        bindings = <
 //╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬───────────╮               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────┬────────╮
    ___        ___          ___           ___           &R_LBRC_WIN    &T_RBRC_WIN    ___                           ___      &win_page_up       ___          &win_up          ___             ___         ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬───────────┤                ├─────────────┬───────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
     ___      ___           ___           ___          &F_LPAR_WIN   &G_RPAR_WIN   ___                             ___      &win_page_down   &win_left     &win_down   &win_right       ___           ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼────────────┼─────────┤                   ├─────────────┬───────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &mt LALT TAB   ___             ___           ___       &V_LBKT_WIN   &B_RBKT_WIN   ___                             ___         ___          ___           ___           ___         ___           &mk_tap RCTRL TAB
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼────────────┼─────────┤                   ├─────────────┬───────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                          &kp LWIN     &lgui_hold LCTL LWIN   ___                                              ___           ___         ___ 
//                                     ╰─────────────┴─────────────┴─────────────╯                                          ╰─────────────┴───────────┴─────────────╯                       
                        >;
                label = "win";
		};


IOS_layer {

                        bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬──────────────┬──────────╮               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────┬────────╮
    ___        ___          ___           ___            ___         ___             ___                           ___       ___          ___            ___          ___             ___         ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼────────────┬────────────┤               ├─────────────┬───────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___        ___           ___           ___           ___         ___           ___                          ___         ___          ___           ___           ___         ___           ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼────────────┼─────────┤                  ├─────────────┬───────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___       ___             ___           ___          ___         ___            ___                         ___         ___          ___           ___           ___         ___           ___
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼────────────┼─────────┤                  ├─────────────┬───────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                            ___          ___          ___                                                    ___           ___           ___
//                                     ╰─────────────┴─────────────┴─────────────╯                                         ╰─────────────┴─────────────┴─────────────╯
                        >;
                label = "ios";
		};

                NAV_layer {
                        bindings = <
//╭──────╮ ╭─────────────┬─────────────┬────────────────────┬────────────────┬───────────────┬───────────╮                  ╭───────────┬───────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
  &kp TILDE  &kp EXCLAMATION &kp AT_SIGN     &kp PIPE        &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE   ___                           ___       &kp PLUS   &kp NUMBER_7  &command_8   &kp NUMBER_9  &layer_tap FN ASTERISK  &kp SLASH
//├──────┤ ├─────────────┼─────────────┼────────────────────┼────────────────┼───────────────┬───────────┤                  ├────────────┬──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___      &kp HASH     &kp DOLLAR       &kp UNDERSCORE       &kp COLON   &kp SEMICOLON         ___                             ___          &kp MINUS    &command_4   &command_5     &command_6        ___         ___
//├──────┤ ├─────────────┼─────────────┼────────────────────┼────────────────┼───────────────┼───────────┤                  ├───────────┬───────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
 &kp LS(TAB) &kp CARET    &kp AMPS       &kp PERCENT            &kp ASTERISK    &kp SLASH         ___                           ___          &kp EQUAL    &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3   &kp DOT        ___
//├──────┤ ╰─────────────┼─────────────┴────────────────────┼────────────────┼───────────────┼───────────┤                  ├────────────┬─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                                         ___           ___          ___                                                       ___           ___        &kp NUMBER_0
//                                                 ╰────────────┼──────────────┴─────────────╯                                             ╰────────────┴─────────────┼─────────────╯
                        >;
                label = "nav";
                };

                FN_layer {

                        bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬────────────┬────────────╮               ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    ___     &kp F12       &kp EQUAL     &kp BACKSLASH    &kp LBRC      &kp RBRC        ___                       ___        &kp HOME      &kp K_POWER     ___             ___         ___          ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼────────────┬────────────┤               ├─────────────┬───────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___     &kp F11       &kp F2        &kp MINUS       &kp LPAR      &kp RPAR        ___                        ___         &kp END      &kp C_POWER   &kp C_PREV  &kp C_PLAY_PAUSE &kp C_NEXT    ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼────────────┼────────────┤               ├─────────────┬───────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    ___     &kp F10       &kp F1        &kp EQUAL       &kp LBKT       &kp RBKT       ___                        ___       &kp C_BRI_UP   &kp C_BRI_DN  &kp C_MUTE  &kp C_VOLUME_DOWN &kp C_VOL_UP  ___
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼────────────┼────────────┤               ├─────────────┬───────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                            ___          ___          ___                                                   &tog LOCK    &to DEF         &to WIN
//                                     ╰─────────────┴─────────────┴────────────╯                                         ╰─────────────┴─────────────┴─────────────╯
                        >;
                label = "fn";
		};

                LOCK_layer {
                        bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬────────────┬──────────╮                ╭───────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    XXX          XXX         XXX            XXX            XXX         XXX         XXX                          XXX        XXX         XXX             XXX           XXX            XXX        XXX
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼──────────┬────────────┤                ├────────────┬────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    XXX          XXX         XXX             XXX          XXX           XXX         XXX                          XXX        XXX         XXX             XXX         XXX              XXX        XXX
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┤                ├───────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    XXX         XXX           XXX           XXX           XXX           XXX        XXX                        XXX           XXX            XXX         XXX           XXX           XXX          XXX
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┼─────────┤                ├───────────┬─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                            XXX            XXX            XXX                                            XXX              XXX            XXX
//                                      ╰─────────────┴────────────┴─────────────╯                                      ╰─────────────┴──────────────┴─────────────╯
                        >;
                label = "lock";
                };


SYS_layer {

                        bindings = <
//╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬────────────┬──────────╮                ╭───────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
  &bt BT_CLR  &bt BT_DISC 0  &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4  ___                      ___        &bt BT_NXT   &bt BT_PRV      ___           ___            ___          ___
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼──────────┬────────────┤                ├────────────┬────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &bootloader &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   ___                       ___          &kp T          ___           ___           ___         ___       &bootloader
//├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────┤                ├───────────┬─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
  &sys_reset  &go_macbook   &go_macpro       &go_win     &go_vision     &to 6       ___                        ___        &sys_reset      ___           ___           ___           ___           ___
//├──────┤ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┼─────────┤                ├───────────┬─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
                                            &to 1       &to 2        &to 0                                                   ___          ___             ___
//                                      ╰─────────────┴────────────┴─────────────╯                                      ╰─────────────┴──────────────┴─────────────╯
                        >;
                    label = "sys";
		};


        };
};
